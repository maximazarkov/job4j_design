package ru.job4j.format;

import java.util.Calendar;

public class Format {
    public static void getGreeting(String name, int age) {
        System.out.println(String.format("Привет! Я %s, мой возраст %d", name, age));
    }

    public static void getGreetingAndTime(String name) {
        Calendar instance = Calendar.getInstance();
        System.out.println(
                String.format("Привет, %s! Текущая дата: %tF, Текущее время: %tT",
                        name, instance, instance));
    }

    public static void main(String[] args) {
        getGreeting("Максим", 40);
        System.out.println(String.format("Аргумент передан? %b", 55));
        System.out.println(String.format("Jo%c4j", 'b'));
        System.out.format("Строка1%nСтрока2");
        getGreetingAndTime("Максим");
        System.out.println(String.format("Задаем число 0.99 - %f", 0.99));
        System.out.println(String.format("Задаем число 0.99 - %.2f", 0.99));
        /**
         * Синтаксис записи всех настроек выглядит так:
         * %[индекс_аргумента$][флаг(и)][ширина][.точность]спецификатор
         * Данная запись называется инструкцией.
         * - С помощью индекса аргумента можно указать позицию в списке аргументов (в виде
         * целого числа). Например, на первый аргумент можно сослаться в виде 1$, а на
         * четвертый - 4$. Если это явно не указано, то все аргументы должны быть переданы
         * в метод в порядке объявления в шаблоне ссылок на них.
         * - Флаги - это отдельные символы для изменения результата форматирования. Например,
         * флаг "+" добавит знак "+" к получившемуся результату, а флаг "," выведет результат
         * с разделителем в виде запятой у тысяч.
         * - Ширина определяет количество выводимых символов. Задаётся целым положительным
         * числом. Если перед ним поставить 0, то если общее количество символов строки вывода
         * будет менее этого значения, разница будет заполнена нулями.
         * - Точность мы уже разобрали выше. Через указание точки и целого числа можно задать
         * выводимое после точки количество символов.
         *
         * Пример с применением всех 4 видов настроек:
         */
        System.out.println(String.format("%1$,+016.2f", 5000000.0000));
    }
}
